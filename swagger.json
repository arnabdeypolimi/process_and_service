{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Donothrow",
    "description": "this is the API documentation for Donothrow",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "arnabdey0503@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://fierce-earth-64250.herokuapp.com/"
    }
  ],
  "tags": [
    {
      "name": "food",
      "description": "Everything about food"
    },
    {
      "name": "restaurant",
      "description": "Access to all the restaurant"
    },
    {
      "name": "request",
      "description": "Access to all the request"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/food/": {
      "post": {
        "tags": [
          "food"
        ],
        "summary": "Add a new food to database",
        "operationId": "addFood",
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Food"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Food"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "sucessful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/food/type/{type}": {
      "get": {
        "tags": [
          "food"
        ],
        "summary": "Finds food by type",
        "description": "this is to find all food of that type",
        "operationId": "getFoodByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of food",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        }
      }
    },
    "/food/{id}": {
      "put": {
        "tags": [
          "food"
        ],
        "summary": "Update an existing food items by id",
        "operationId": "updatefood",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of food to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Food"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Food"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "food"
        ],
        "summary": "Finds food by id",
        "description": "this is to find food",
        "operationId": "getFood",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of food to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "food"
        ],
        "summary": "delete food by id",
        "description": "remove food by id",
        "operationId": "deleteFood",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of food to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/user/info/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user info by id",
        "description": "Find user info by id",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user information",
        "description": "allow to update user information",
        "operationId": "putUserInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/user/signUp": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "register user",
        "description": "allow to register new user",
        "operationId": "userSignUp",
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsucessful"
          }
        }
      }
    },
    "/user/signIn": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "signIn with user info",
        "description": "allow user to signIn",
        "operationId": "userSignIn",
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsucessful"
          }
        }
      }
    },
    "/restaurant/getInfo/{id}": {
      "get": {
        "tags": [
          "restaurant"
        ],
        "summary": "get the info about restaurants",
        "description": "get the info by id",
        "operationId": "getInfoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Restaurant"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Restaurant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsucessful"
          }
        }
      }
    },
    "/restaurant/add": {
      "post": {
        "tags": [
          "restaurant"
        ],
        "summary": "add new restaurants",
        "description": "add new restaurants",
        "operationId": "restaurantAdd",
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Restaurant"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Restaurant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Restaurant"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Restaurant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsucessful"
          }
        }
      }
    },
    "/request/{id}": {
      "get": {
        "tags": [
          "request"
        ],
        "summary": "find request by id",
        "description": "find info of the request",
        "operationId": "requestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsucessful"
          }
        }
      },
      "delete": {
        "tags": [
          "request"
        ],
        "summary": "delete request by id",
        "description": "remove request by id",
        "operationId": "deleteRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of request to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/request/all": {
      "get": {
        "tags": [
          "request"
        ],
        "summary": "find all the request",
        "description": "all to see all the request",
        "operationId": "requestAll",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "unsuccessful"
          }
        }
      }
    },
    "/request": {
      "post": {
        "tags": [
          "request"
        ],
        "summary": "add new request",
        "description": "allow users to add new request",
        "operationId": "addRequest",
        "requestBody": {
          "description": "food object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "unsuccessful"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Request"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Restaurant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Restaurant"
        }
      },
      "Food": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "number": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "example": "non vag"
          }
        },
        "xml": {
          "name": "Food"
        }
      }
    }
  }
}